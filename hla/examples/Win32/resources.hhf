#if( !@defined( resource_hhf ))
const
	resource_hhf := true;
	_nl_:text := "#$a";


// Utility macro used by DIALOG.
// Handles controls that use the following syntax:
//
//	controlname "string", x, y, width, height {,optional items}

#macro _controlMacro_( _ctrlStr_ );
			forward( _idValue_ );
			_idValueName_:string := @string( @text( @string( _idValue_ )));
			_idValue_:uns32 := rsrcCntr;
			#write( "#define ", _idValueName_, " ", rsrcCntr, _nl_ );
			?rsrcCntr += 1;
			?_dlgStrs_ := _dlgStrs_ + _ctrlStr_ + 	" " +
							@string( _caption_ ) + 	"," +
							_idValueName_ + 		"," +
							@string( _x_ ) + 		"," +
							@string( _y_ ) + 		"," +
							@string( _width_ ) + 	"," +
							@string( _height_ );

			#for( _item_ in _styles_ )

				?_dlgStrs_ := _dlgStrs_ + "," + _item_;

			#endfor
			?_dlgStrs_ := _dlgStrs_ + _nl_;
#endmacro



// Utility macro used by DIALOG.
// Handles controls that use the following syntax:
//
//	controlname x, y, width, height {,optional items}

#macro _controlMacro2_( _ctrlStr_ );
			forward( _idValue_ );
			_idValueName_:string := @string( @text( @string( _idValue_ )));
			_idValue_:uns32 := rsrcCntr;
			#write( "#define ", _idValueName_, " ", rsrcCntr, _nl_ );
			?rsrcCntr += 1;
			?_dlgStrs_ := _dlgStrs_ + _ctrlStr_ + 	" " +
							_idValueName_ + 		"," +
							@string( _x_ ) + 		"," +
							@string( _y_ ) + 		"," +
							@string( _width_ ) + 	"," +
							@string( _height_ );

			#for( _item_ in _styles_ )

				?_dlgStrs_ := _dlgStrs_ + "," + _item_;

			#endfor
			?_dlgStrs_ := _dlgStrs_ + _nl_;
#endmacro



// Utility macro used by DIALOG.
// Handles controls that use the following syntax:
//
//	controlname "string", x, y, {,optional items}

#macro _controlMacro3_( _ctrlStr_ );
			forward( _idValue_ );
			_idValueName_:string := @string( @text( @string( _idValue_ )));
			_idValue_:uns32 := rsrcCntr;
			#write( "#define ", _idValueName_, " ", rsrcCntr, _nl_ );
			?rsrcCntr += 1;
			?_dlgStrs_ := _dlgStrs_ + _ctrlStr_ + 	" " +
							@string( _caption_ ) + 	"," +
							_idValueName_ + 		"," +
							@string( _x_ ) + 		"," +
							@string( _y_ );

			#for( _item_ in _styles_ )

				?_dlgStrs_ := _dlgStrs_ + "," + _item_;

			#endfor
			?_dlgStrs_ := _dlgStrs_ + _nl_;
#endmacro




// Here is the macro that defines the <<resource..endresource>> block.
// Parameter is the name of the resource script file (.rc file) to which
// the data is to be written.

#macro resource( _filename_ ):STRINGTABLE, ACCELERATOR, DIALOG;

	#openwrite( _filename_ )
	#write( "#include <windows.h>", #$a )
	?rsrcCntr :uns32 := 100;
	const


	// Handle STRINGTABLE resources here.
	//
	//	Syntax:
	//
	//		STRINGTABLE
	//
	//			id:strres( "string" );
	//				.
	//				.
	//				.
	//			id:strres( "string" );
	//
	//		ENDSTRINGTABLE;

	#macro STRINGTABLE:_strings_;
		?_strings_:string := "";

		#keyword strres( _theString_ ):_theVar_,_theVarName_;
			forward(_theVar_);
			_theVarName_:string := @string( @text( @string( _theVar_ )));
			_theVar_:uns32 := rsrcCntr;
			#write( "#define ", _theVarName_ , " ", rsrcCntr, _nl_ );
			?_strings_ := _strings_ + _theVarName_ + ", """ + _theString_ + """" _nl_; 
			?rsrcCntr += 1;

		#terminator ENDSTRINGTABLE;
			#write( "STRINGTABLE" _nl_ "BEGIN" _nl_, _strings_, "END" _nl_ )

	#endmacro

	// Handle ACCELERATOR resources here:
	//
	//		accname:ACCELERATOR
	//
	//			id:acc( event {,options} );
	//				.
	//				.
	//				.
	//			id:acc( event {,options} );
	//
	//		ENDACCELERATOR;

	#macro ACCELERATOR:_accStr_, _accName_, _strings_;
		?_strings_:string := "";
		forward( _accStr_ );
		_accName_:string := @string( @text( @string( _accStr_ )));
		_accStr_:uns32 := rsrcCntr;
		#write( "#define ", _accName_ , " ", rsrcCntr, _nl_ );
		?rsrcCntr += 1;

		#keyword acc( _event_, _options_[] ): _idValue_, _idValueName_, _item_;

			forward( _idValue_ );
			_idValueName_:string := @string( @text( @string( _idValue_ )));
			_idValue_:uns32 := rsrcCntr;
			#write( "#define ", _idValueName_, " ", rsrcCntr, _nl_ );
			?rsrcCntr += 1;
			?_strings_ := _strings_ + @string( _event_ ) + ", " + _idValueName_;
			#for( _item_ in _options_ )

				?_strings_ := _strings_ + ", " + _item_;

			#endfor
			?_strings_ := _strings_ + _nl_;

		#terminator ENDACCELERATOR;
			#write( _accName_, " ACCELERATORS" _nl_ "BEGIN" _nl_, _strings_, "END" _nl_ )

	#endmacro




	// Handle DIALOG resources here:
	//
	//		accname:DIALOG
	//
	//			id:ctrlname( parameters );
	//				.
	//				.
	//				.
	//			id:ctrlname( parameters );
	//
	//		ENDDIALOG;
	//
	// Note: ctrlname can be AUTO3STATE, AUTOCHECKBOX, CHECKBOX, COMBOBOX,
	//  CTEXT, DEFPUSHBUTTON, EDITTEXT, GROUPBOX, ICON, LISTBOX, LTEXT,
	//	PUSHBOX, PUSHBUTTON, RADIOBUTTON, RTEXT, SCROLLBAR, STATE3
	 

	#macro DIALOG( _dx_, _dy_, _dw_, _dh_, options[] ):
			_dlgStr_, _dlgName_, _dlgStrs_, _dlgRsrc_;

		?_dlgStrs_:string := "";
		forward( _dlgStr_ );
		_dlgName_:string := @string( @text( @string( _dlgStr_ )));
		?_dlgRsrc_ := rsrcCntr;
		_dlgStr_:uns32 := _dlgRsrc_;
		#write( "#define ", _dlgName_ , " ", rsrcCntr, _nl_ );
		?rsrcCntr += 1;

		#keyword AUTO3STATE
		( 
			_caption_, 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_;

			_controlMacro_( "AUTO3STATE" )


		#keyword AUTOCHECKBOX
		( 
			_caption_, 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_;

			_controlMacro_( "AUTOCHECKBOX" )


		#keyword CHECKBOX
		( 
			_caption_, 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_;

			_controlMacro_( "CHECKBOX" )


		#keyword COMBOBOX
		( 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_, _caption_;

			_controlMacro2_( "COMBOBOX" )

		#keyword CTEXT
		( 
			_caption_, 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_;

			_controlMacro_( "CTEXT" )


		#keyword DEFPUSHBUTTON
		( 
			_caption_, 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_;

			_controlMacro_( "DEFPUSHBUTTON" )


		#keyword EDITTEXT
		( 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_;

			_controlMacro2_( "EDITTEXT" )


		#keyword GROUPBOX
		( 
			_caption_, 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_;

			_controlMacro_( "GROUPBOX" )


		#keyword ICON
		( 
			_caption_, 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_;

			_controlMacro_( "ICON" )


		#keyword LISTBOX
		( 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_;

			_controlMacro2_( "LISTBOX" )


		#keyword LTEXT
		( 
			_caption_, 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_;

			_controlMacro_( "LTEXT" )


		#keyword PUSHBOX
		( 
			_caption_, 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_;

			_controlMacro_( "PUSHBOX" )


		#keyword PUSHBUTTON
		( 
			_caption_, 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_;

			_controlMacro_( "PUSHBUTTON" )


		#keyword RADIOBUTTON
		( 
			_caption_, 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_;

			_controlMacro_( "PUSHBUTTON" )


		#keyword RTEXT
		( 
			_caption_, 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_;

			_controlMacro_( "RTEXT" )


		#keyword SCROLLBAR
		( 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_;

			_controlMacro2_( "SCROLLBAR" )



		#keyword STATE3
		( 
			_caption_, 
			_x_, 
			_y_, 
			_width_, 
			_height_, 
			_styles_[] 
		):	_idValue_, _idValueName_, _item_;

			_controlMacro_( "STATE3" )


		#terminator ENDDIALOG;
			#write
			( 
				_dlgName_, 
				" DIALOG ", 
				_dx_, ", ", 
				_dy_, ", ", 
				_dw_, ", ", 
				_dh_, _nl_ 
			);
			#for( option in options )

				#write( option, _nl_ )

			#endfor
			#write( "BEGIN" _nl_, _dlgStrs_, "END" _nl_ )

	#endmacro


	#keyword CURSOR( _cursFName_ ):_theVar_,_theVarName_;
		forward(_theVar_);
		_theVarName_:string := @string( @text( @string( _theVar_ )));	
		_theVar_:uns32 := rsrcCntr;
		#write( "#define ", _theVarName_ , " ", rsrcCntr, _nl_ );
		#write( _theVarName_, " CURSOR """, _cursFName_, """" _nl_ ); 
		?rsrcCntr += 1;

	#keyword BITMAP( _bmFName_ ):_theVar_,_theVarName_;
		forward(_theVar_);
		_theVarName_:string := @string( @text( @string( _theVar_ )));	
		_theVar_:uns32 := rsrcCntr;
		#write( "#define ", _theVarName_ , " ", rsrcCntr, _nl_ );
		#write( _theVarName_, " BITMAP """, _bmFName_, """" _nl_ ); 
		?rsrcCntr += 1;

	#keyword FONT( _parms_[] );
		#if( @elements( _parms_ ) = 1 )

			forward(_theVar_);
			_theVar_:uns32 := rsrcCntr;
			#write( _theVar_, " FONT ", _parms_[0], _nl_ ); 
			?rsrcCntr += 1;

		#elseif( @elements( _parms_ ) = 2 )

			#write( " FONT ", _parms_[0], ", ", _parms_[1], _nl_ )

		#else

			#error( "Expected one or two parameters in FONT statement" )

		#endif


	#terminator endresource;
		#closewrite

#endmacro

#endif