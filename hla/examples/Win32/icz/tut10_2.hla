// Iczelion's tutorial #10_2: Dialog Boxes #2
//
//	To compile this program use the command line:
//
//	hla -w tut10_2.hla tut10_2.rc


program secondDialogBox;
#include( "w.hhf" )			// Standard windows stuff.
#include( "strings.hhf" )	// Defines HLA string routines.
#include( "memory.hhf" )	// Defines "NULL" among other things.
#include( "args.hhf" )		// Command line parameter stuff.
#include( "conv.hhf" )


static
	hInstance:		dword;
	CommandLine:	string;
	buffer:			char[ 512 ];
	

const
	IDM_GETTEXT	:= 32000;
	IDM_CLEAR	:= 32001;
	IDM_EXIT	:= 32002;
	
	IDC_EDIT	:= 3000;
	IDC_BUTTON	:= 3001;
	IDC_EXIT	:= 3002;
	
	
readonly

	ClassName:	string := "DLGCLASS";
	DlgName:	string := "MyDialog";
	AppName:	string := "Our Second Dialog Box";
	TestString:	string := "Wow! I'm in an edit box now";
	


// The dialog procedure.
//
// This is actually a function that returns a return result in
// EAX.  If this function returns zero in EAX, then the event
// loop terminates program execution.

procedure DlgProc( hWnd:dword; uMsg:uns32; wParam:dword; lParam:dword  );
	@nodisplay;
	@stdcall;
	
begin DlgProc;


	// If the WM_DESTROY message comes along, then we've
	// got to post a message telling the event loop that
	// it's time to quit the program.  The return value in
	// EAX must be false (zero).  The GetMessage function
	// will return this value to the event loop which is
	// the indication that it's time to quit.
	
	if( uMsg = w.WM_INITDIALOG ) then
	

	
		w.GetDlgItem( hWnd, IDC_EDIT );
		w.SetFocus( eax );
				
	elseif( uMsg = w.WM_CLOSE ) then
	
		w.SendMessage( hWnd, w.WM_COMMAND, IDM_EXIT, 0 );
	
	elseif( uMsg = w.WM_COMMAND ) then
		
		mov( wParam, eax );
		if( lParam = 0 ) then
		
			if( ax = IDM_GETTEXT ) then
			
				w.GetDlgItemText( hWnd, IDC_EDIT, buffer, 512 );
				w.MessageBox
				( 
					NULL, 
					&buffer, 
					AppName, 
					w.MB_OK 
				);
				
			elseif( ax = IDM_CLEAR ) then
			
				w.SetDlgItemText( hWnd, IDC_EDIT, NULL );
				
			elseif( ax = IDM_EXIT ) then

				w.EndDialog( hWnd, NULL );

			endif;
			
		else
		
			mov( (type word wParam[2]), dx );
			if( dx = w.BN_CLICKED ) then
			
				if( ax = IDC_BUTTON ) then
				
					w.SetDlgItemText( hWnd, IDC_EDIT, TestString );
					
				elseif( ax = IDC_EXIT ) then
				
					w.SendMessage( hWnd, w.WM_COMMAND, IDM_EXIT, 0 );
					
				endif;
				
			endif;					

		endif;
		 
	else
	
		// If we didn't handle the dialog message, return false.
		
		xor( eax, eax );
		exit DlgProc;
		
	endif;
	mov( true, eax );
	
end DlgProc;


	

	
begin secondDialogBox;

	// Get this process' handle:
	
	w.GetModuleHandle( NULL );
	mov( eax, hInstance );
	
		
	// DialogBoxParam returns a return code in EAX, exit the program
	// and pass along that return code.

	w.DialogBoxParam( hInstance, DlgName, NULL, &DlgProc, NULL );
	w.ExitProcess( eax );	

end secondDialogBox;