unit consoleUnit;
#include( "stdout.hhf" );
#include( "win32cons.hhf" );


// scrollDn-
//
// Scrolls the screen down one line.

procedure win32cons.scrollDn; @nodisplay;
var
	csbi: 	win.CONSOLE_SCREEN_BUFFER_INFO;
	ci:		win.CHAR_INFO;
	src:	win.small_rect;
	dest:	win.COORD;


begin scrollDn;

	pushad();
	win32cons.info( csbi );

	// Compute the bounds of the rectangle to move.
	// And the destination coordinate to move it to.

	mov( csbi.srWindow.left, ax );
	mov( ax, src.left );
	mov( ax, dest.X );

	mov( csbi.srWindow.top, ax );
	mov( ax, src.top );
	inc( ax );
	mov( ax, dest.Y );

	mov( csbi.srWindow.right, ax );
	mov( ax, src.right );
	mov( csbi.srWindow.bottom, ax );
	mov( ax, src.bottom );

	// Set up the fill char and attribute:

	mov( ' ', ci.AsciiChar );
	mov( csbi.wAttributes, ax );
	mov( ax, ci.Attributes );

	// Okay, scroll the screen up one line:

	win.ScrollConsoleScreenBuffer
	(
		ci,
		#{
			pushd( (type dword dest));
		}#,
		0,	// NULL clipping region.
		src,
		stdout.handle()
	);
	popad();	

end scrollDn;



end consoleUnit;