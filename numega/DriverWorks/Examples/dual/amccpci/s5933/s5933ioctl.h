// S5933ioctl.h
//
// Define control codes for S5933 driver
//

#ifndef __S5933ioctl__h_
#define __S5933ioctl__h_

#define S5933_IOCTL_800_CHIP_RESET CTL_CODE(FILE_DEVICE_UNKNOWN, 0x800, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define S5933_IOCTL_801_POST_MSG CTL_CODE(FILE_DEVICE_UNKNOWN, 0x801, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define S5933_IOCTL_802_RETRIEVE_MSG CTL_CODE(FILE_DEVICE_UNKNOWN, 0x802, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define S5933_IOCTL_803_WRITE_PASSTHRU CTL_CODE(FILE_DEVICE_UNKNOWN, 0x803, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define S5933_IOCTL_804_WRITE_NVRAM CTL_CODE(FILE_DEVICE_UNKNOWN, 0x805, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define S5933_IOCTL_805_READ_NVRAM CTL_CODE(FILE_DEVICE_UNKNOWN, 0x806, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define S5933_IOCTL_806_DUMP_REGISTERS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x807, METHOD_BUFFERED, FILE_ANY_ACCESS)

// Structure used to send or retrieve a message to the AMCC S5933
typedef struct _KS5933_MAILBOX_MESSAGE {
	ULONG MessageValue;				// Message value
	ULONG MessageMailBox;			// Mailbox number (1-4)
} KS5933_MAILBOX_MESSAGE, *PKS5933_MAILBOX_MESSAGE;
        

// Structure used to read/write data through the pass-thru to the AMCC S5933
typedef struct _KS5933_PASSTHRU {
	ULONG Data;						// Data to read
} KS5933_PASSTHRU, *PKS5933_PASSTHRU;

typedef struct _KS5933_NVRAM {
	USHORT Offset;					// Address offset into NVRAM
	USHORT Count;					// Byte count to read
	UCHAR Data[1];					// Data
} KS5933_NVRAM, *PKS5933_NVRAM;

#endif
