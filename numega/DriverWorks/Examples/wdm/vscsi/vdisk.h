// vdisk.h
//
// Generated by DriverWizard version DriverStudio 2.7.0 (Build 554)
// Requires Compuware's DriverWorks classes
//

#ifndef __VDISK_H__
#define __VDISK_H__

#include "sockets.h"

// forward declaration
class VScsiDevice;
class VBus;

#define VENDORNAME						L"Numega "
#define MODELNAME						L"ScsiDisk "

#define DEVICE_DISK_IDS					L"VSCSI\\NumegaScsiDisk\0"
#define HARDWARE_DISK_IDS				L"VSCSI\\NumegaScsiDisk\0GenDisk\0"

#define VSCSI_COMMAND_READ				UCHAR(0)
#define VSCSI_COMMAND_WRITE				UCHAR(1)

#define VSCSI_BUFFER_SIZE		0x400000

////////////////////////////////////////////////////////////////////////////
//
// VScsiQueue class
//		implements IRP queue
//
class VScsiQueue : public KDriverManagedQueueCsq
{
// Construction
public:
	SAFE_DESTRUCTORS;

	virtual VOID StartIo(KIrp I);
};

////////////////////////////////////////////////////////////////////////////
//
// VDisk class
//		extends KPhysicalDevice class
//
class VDisk : public KPhysicalDevice
{
	// Constructors
public:
	virtual SAFE_DESTRUCTORS;
	VDisk(VScsiDevice* pParent, VBus* pBus, ULONG Unit);
	~VDisk();

// Overrides for KPnpDevice class
	virtual NTSTATUS OnQueryId(KIrp I);
	virtual NTSTATUS OnQueryBusInformation(KIrp I);
	virtual NTSTATUS OnDeviceUsageNotification(KIrp I);
	virtual NTSTATUS OnQueryDeviceText(KIrp I);
	virtual NTSTATUS OnQueryResources(KIrp I);
	virtual NTSTATUS OnQueryResourceRequirements(KIrp I);

	virtual NTSTATUS Create(KIrp I);
	virtual NTSTATUS Close(KIrp I);
	virtual NTSTATUS DeviceControl(KIrp I);
	virtual NTSTATUS InternalDeviceControl(KIrp I);

	void Removed() { m_bExist = false; }

	VOID StartReadWrite(KIrp I);
	VOID OnReadComplete(NTSTATUS status);
	VOID OnWriteComplete(NTSTATUS status, ULONG ByteCount);

	VOID OnConnect(NTSTATUS Status);
	VOID OnDisconnect();

	// Member Data
protected:
	VScsiDevice*		m_Parent;			// pointer to parent device object

	VScsiQueue			m_queue;			// irp queue
	iSocket*			m_socket;			// tcp socket

	PWCHAR				m_DeviceIDs;		// device ids
	PWCHAR				m_HardwareIDs;		// hardware ids

public:
	ULONG				m_address;			// ip address
};

#endif // __VDISK_H__
