// isession.h
//
// Generated by DriverWizard version DriverStudio 2.7.0 (Build 554)
// Requires Compuware's DriverWorks classes
//

#ifndef __ISESSION_H__
#define __ISESSION_H__

#include <tdiSclient.h>

class ServerDevice;

////////////////////////////////////////////////////////////////////////////
//
// ReadWriteSession class 
//		server session object
//
class ReadWriteSession : public KStreamServerSession
{
// handlers - overrides from KStreamServerSession
public:
    virtual BOOLEAN OnConnect(uint AddressLength, PTRANSPORT_ADDRESS pTA, uint OptionsLength, PVOID Options);
    virtual void OnDisconnect(uint OptionsLength, PVOID Options, BOOLEAN bAbort);
	virtual uint OnReceive(uint Indicated, uchar *Data, uint Available, uchar **RcvBuffer, uint* RcvBufferLen);
    virtual void OnSendComplete(PVOID buf, TDI_STATUS status, uint bytecnt);
};

class ReadWriteSocket : public KStreamServer<ReadWriteSession>
{
public:
	SAFE_DESTRUCTORS;
	ReadWriteSocket(ServerDevice* pDevice, PTRANSPORT_ADDRESS pTA) : m_pDevice(pDevice), KStreamServer<ReadWriteSession>(pTA) {}
	~ReadWriteSocket() { disconnect_all(); }

protected:
	ServerDevice*						m_pDevice;

	friend class ReadWriteSession;
};

////////////////////////////////////////////////////////////////////////////
//
// BroadcastSocket class 
//		listens for broadcast messages
//
class BroadcastSocket : public KDatagramSocket
{
	// constructors
public:
	SAFE_DESTRUCTORS;
	BroadcastSocket(PTRANSPORT_ADDRESS pTA) : KDatagramSocket(pTA) {}
	~BroadcastSocket() 
	{
		SetEvents(FALSE);
		Wait();
	}

public:
	virtual uint OnReceive(
		uint AddressLength,
		PTRANSPORT_ADDRESS pTA,
		uint OptionsLength,
		PVOID Options,
		uint Indicated,
		uchar* Data,
		uint Available,
		uchar** RcvBuffer,
		uint* RcvBufferLen
		);

	virtual void On_sendtoComplete(PVOID pCxt, TDI_STATUS Status, uint ByteCount);
};

#endif // __ISESSION_H__
