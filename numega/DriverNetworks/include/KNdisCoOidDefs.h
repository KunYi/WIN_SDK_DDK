// KNdisCoOidDefs.h: Defines Connection-Oriented OID handlers
//=============================================================================
//
// Compuware Corporation
// NuMega Lab
// 9 Townsend West
// Nashua, NH 03063  USA
//
// Copyright (c) 2004 Compuware Corporation. All Rights Reserved.
// Unpublished - rights reserved under the Copyright laws of the
// United States.
//
//=============================================================================
// This file is to be included into the declaration of a connection-oriented
// KNdisMiniAdapter-derived class.
//
// This file also serves as input for the Wizard to generate handler
// prototypes for XxxxOids.cpp file.
//

#if !defined(__KNDIS_CO_OID_DEFS_H__)
#define __KNDIS_CO_OID_DEFS_H__

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#if (KNDIS_DDK_VERSION >= 5)

/////////////////////////////////////////////////////////////////////
// OID handler definition
//
// OID Queries ("get") might come in one of the 3 forms:
//
//	1) short property (returning a value):			T getXXX(VC *pVC);
//	2) short handler (returning NDIS_STATUS):		NDIS_STATUS getXXX(VC *pVC, T*);
//  3) variable handler (returning NDIS_STATUS):	NDIS_STATUS getXXX(VC *pVC, T*, PULONG, PULONG);
//
// OID Set ("set") might come in one of the 2 forms:
//
//	1) short handler (returning NDIS_STATUS):		NDIS_STATUS setXXX(VC *pVC, T*);
//  2) variable handler (returning NDIS_STATUS):	NDIS_STATUS setXXX(VC *pVC, T*, PULONG, PULONG);
//
// The naming convention: getOID_XXX_YYY() and setOID_XXX_YYY().
//
// The Query/Set dispatcher chooses one of the 3 forms based on
// the OID properties specified in KNdisOidTraits template.
//
/////////////////////////////////////////////////////////////////////
#define DECLARE_CO_OID_HANDLERS(VC, oid)	\
	KNdisOid<oid>::GetValueType get##oid(IN VC *pVC);						\
	NDIS_STATUS get##oid(IN VC *pVC, IN OUT KNdisOid<oid>::Type*);	\
	NDIS_STATUS get##oid(IN VC *pVC, IN OUT KNdisOid<oid>::Type* , IN OUT PULONG ByteCount, OUT PULONG BytesNeeded); \
	NDIS_STATUS set##oid(IN VC *pVC, IN KNdisOid<oid>::Type*);	\
	NDIS_STATUS set##oid(IN VC *pVC, IN OUT KNdisOid<oid>::Type* , IN OUT PULONG ByteCount, OUT PULONG BytesNeeded);

//////////////////////////////////////////////////////////////////////
// Declare Handler Prototypes for ALL NDIS OIDs.
// Those get included in the declaration of a KNdisMiniAdapter-
// derived class.
//
// TODO: ifdef based on media types declared
//
/////////////////////////////////////////////////////////////////////

//////////
// GENERAL
#if defined (CONDIS_MINIPORT)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_HARDWARE_STATUS)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_MEDIA_SUPPORTED)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_MEDIA_IN_USE)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_MAXIMUM_LOOKAHEAD)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_MAXIMUM_FRAME_SIZE)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_LINK_SPEED)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_TRANSMIT_BUFFER_SPACE)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_RECEIVE_BUFFER_SPACE)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_TRANSMIT_BLOCK_SIZE)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_RECEIVE_BLOCK_SIZE)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_VENDOR_ID)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_VENDOR_DESCRIPTION)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_CURRENT_PACKET_FILTER)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_CURRENT_LOOKAHEAD)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_DRIVER_VERSION)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_MAXIMUM_TOTAL_SIZE)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_PROTOCOL_OPTIONS)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_MAC_OPTIONS)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_MEDIA_CONNECT_STATUS)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_MAXIMUM_SEND_PACKETS)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_VENDOR_DRIVER_VERSION)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_SUPPORTED_GUIDS)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_NETWORK_LAYER_ADDRESSES)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_TRANSPORT_HEADER_OFFSET)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_PHYSICAL_MEDIUM)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_MEDIA_CAPABILITIES)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_MACHINE_NAME)

DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_XMIT_OK)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_RCV_OK)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_XMIT_ERROR)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_RCV_ERROR)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_RCV_NO_BUFFER)

DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_DIRECTED_BYTES_XMIT)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_DIRECTED_FRAMES_XMIT)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_MULTICAST_BYTES_XMIT)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_MULTICAST_FRAMES_XMIT)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_BROADCAST_BYTES_XMIT)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_BROADCAST_FRAMES_XMIT)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_DIRECTED_BYTES_RCV)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_DIRECTED_FRAMES_RCV)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_MULTICAST_BYTES_RCV)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_MULTICAST_FRAMES_RCV)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_BROADCAST_BYTES_RCV)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_BROADCAST_FRAMES_RCV)

DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_RCV_CRC_ERROR)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_TRANSMIT_QUEUE_LENGTH)

DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_GET_TIME_CAPS)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_GET_NETCARD_TIME)

DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_NETCARD_LOAD)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_DEVICE_PROFILE)

DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_INIT_TIME_MS)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_RESET_COUNTS)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_GEN_MEDIA_SENSE_COUNTS)

////////////////////////////////////
// GEN_CO_ are mapped to normal GEN_

///////////////////////////////////
// Ethertnet
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_802_3_PERMANENT_ADDRESS)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_802_3_CURRENT_ADDRESS)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_802_3_MULTICAST_LIST)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_802_3_MAXIMUM_LIST_SIZE)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_802_3_MAC_OPTIONS)

DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_802_3_RCV_ERROR_ALIGNMENT)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_802_3_XMIT_ONE_COLLISION)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_802_3_XMIT_MORE_COLLISIONS)

DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_802_3_XMIT_DEFERRED)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_802_3_XMIT_MAX_COLLISIONS)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_802_3_RCV_OVERRUN)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_802_3_XMIT_UNDERRUN)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_802_3_XMIT_HEARTBEAT_FAILURE)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_802_3_XMIT_TIMES_CRS_LOST)
DECLARE_CO_OID_HANDLERS ( KNdisMiniportVc, OID_802_3_XMIT_LATE_COLLISIONS)

////////////////////////////////////
//	PnP and PM OIDs
//
#if (KNDIS_PNP_AWARE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_PNP_CAPABILITIES	)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_PNP_SET_POWER		)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_PNP_QUERY_POWER	)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_PNP_ADD_WAKE_UP_PATTERN)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_PNP_REMOVE_WAKE_UP_PATTERN)
// DECLARE_CO_OID_HANDLERS( OID_PNP_WAKE_UP_PATTERN_LIST) -- not handled by miniports
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_PNP_ENABLE_WAKE_UP	)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_PNP_WAKE_UP_OK		)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_PNP_WAKE_UP_ERROR	)
#endif

//=============================================================================
// Continuation of KNdisOidDefs.h -- Additional NDIS 4 handlers
///////////////////////////////////////////////////////////////

#ifdef	KNDIS_MEDIUM_INCLUDE_802_5
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_802_5_PERMANENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_802_5_CURRENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_802_5_CURRENT_FUNCTIONAL)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_802_5_CURRENT_GROUP)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_802_5_LAST_OPEN_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_802_5_CURRENT_RING_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_802_5_CURRENT_RING_STATE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_802_5_LINE_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_802_5_LOST_FRAMES)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_802_5_BURST_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_802_5_AC_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_802_5_ABORT_DELIMETERS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_802_5_FRAME_COPIED_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_802_5_FREQUENCY_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_802_5_TOKEN_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_802_5_INTERNAL_ERRORS)
#endif

#ifdef	KNDIS_MEDIUM_INCLUDE_FDDI
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_LONG_PERMANENT_ADDR)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_LONG_CURRENT_ADDR)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_LONG_MULTICAST_LIST)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_LONG_MAX_LIST_SIZE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SHORT_PERMANENT_ADDR)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SHORT_CURRENT_ADDR)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SHORT_MULTICAST_LIST)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SHORT_MAX_LIST_SIZE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_ATTACHMENT_TYPE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_UPSTREAM_NODE_LONG)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_DOWNSTREAM_NODE_LONG)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_FRAME_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_FRAMES_LOST)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_RING_MGT_STATE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_LCT_FAILURES)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_LEM_REJECTS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_LCONNECTION_STATE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_STATION_ID)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_OP_VERSION_ID)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_HI_VERSION_ID)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_LO_VERSION_ID)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_MANUFACTURER_DATA)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_USER_DATA)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_MIB_VERSION_ID)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_MAC_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_NON_MASTER_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_MASTER_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_AVAILABLE_PATHS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_CONFIG_CAPABILITIES)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_CONFIG_POLICY)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_CONNECTION_POLICY)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_T_NOTIFY)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_STAT_RPT_POLICY)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_TRACE_MAX_EXPIRATION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_PORT_INDEXES)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_MAC_INDEXES)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_BYPASS_PRESENT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_ECM_STATE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_CF_STATE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_HOLD_STATE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_REMOTE_DISCONNECT_FLAG)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_STATION_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_PEER_WRAP_FLAG)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_MSG_TIME_STAMP)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_TRANSITION_TIME_STAMP)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_SET_COUNT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_LAST_SET_STATION_ID)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_FRAME_STATUS_FUNCTIONS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_BRIDGE_FUNCTIONS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_INDEX)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_SMT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_LONG_GRP_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_SHORT_GRP_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_T_REQ)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_T_NEG)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_T_MAX)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_TVX_VALUE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_T_PRI0)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_T_PRI1)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_T_PRI2)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_T_PRI3)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_T_PRI4)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_T_PRI5)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_T_PRI6)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_FRAME_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_COPIED_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_TRANSMIT_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_TOKEN_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_ERROR_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_LOST_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_TVX_EXPIRED_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_NOT_COPIED_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_LATE_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_RING_OP_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_FRAME_ERROR_THRESHOLD)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_FRAME_ERROR_RATIO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_NOT_COPIED_THRESHOLD)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_NOT_COPIED_RATIO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_RMT_STATE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_HARDWARE_PRESENT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_MAC_MA_UNITDATA_ENABLE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PATH_INDEX)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PATH_RING_LATENCY)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PATH_TRACE_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PATH_SBA_PAYLOAD)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PATH_SBA_OVERHEAD)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PATH_CONFIGURATION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PATH_T_R_MODE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PATH_SBA_AVAILABLE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PATH_TVX_LOWER_BOUND)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PATH_T_MAX_LOWER_BOUND)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PATH_MAX_T_REQ)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_MY_TYPE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_NEIGHBOR_TYPE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_CONNECTION_POLICIES)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_MAC_INDICATED)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_CURRENT_PATH)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_REQUESTED_PATHS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_MAC_PLACEMENT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_AVAILABLE_PATHS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_MAC_LOOP_TIME)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_PMD_CLASS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_CONNECTION_CAPABILITIES)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_INDEX)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_MAINT_LS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_BS_FLAG)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_PC_LS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_EB_ERROR_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_LCT_FAIL_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_LER_ESTIMATE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_LEM_REJECT_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_LEM_CT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_LER_CUTOFF)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_LER_ALARM)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_CONNNECT_STATE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_PCM_STATE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_PC_WITHHOLD)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_LER_FLAG)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_HARDWARE_PRESENT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_SMT_STATION_ACTION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_PORT_ACTION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_DESCR)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_TYPE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_MTU)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_SPEED)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_PHYS_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_ADMIN_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_OPER_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_LAST_CHANGE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_IN_OCTETS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_IN_UCAST_PKTS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_IN_NUCAST_PKTS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_IN_DISCARDS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_IN_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_IN_UNKNOWN_PROTOS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_OUT_OCTETS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_OUT_UCAST_PKTS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_OUT_NUCAST_PKTS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_OUT_DISCARDS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_OUT_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_OUT_QLEN)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FDDI_IF_SPECIFIC)
#endif

#ifdef KNDIS_MEDIUM_INCLUDE_WAN
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_PERMANENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_CURRENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_QUALITY_OF_SERVICE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_PROTOCOL_TYPE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_MEDIUM_SUBTYPE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_HEADER_FORMAT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_GET_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_SET_LINK_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_GET_LINK_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_LINE_COUNT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_PROTOCOL_CAPS)

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_GET_BRIDGE_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_SET_BRIDGE_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_GET_COMP_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_SET_COMP_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_GET_STATS_INFO)

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_CO_GET_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_CO_GET_LINK_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_CO_SET_LINK_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_LTALK_CURRENT_NODE_ID)

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_CO_GET_COMP_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_CO_SET_COMP_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WAN_CO_GET_STATS_INFO)
#endif

#ifdef KNDIS_MEDIUM_INCLUDE_LTALK
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_LTALK_IN_BROADCASTS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_LTALK_IN_LENGTH_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_LTALK_OUT_NO_HANDLERS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_LTALK_COLLISIONS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_LTALK_DEFERS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_LTALK_NO_DATA_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_LTALK_RANDOM_CTS_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_LTALK_FCS_ERRORS)
#endif

#ifdef KNDIS_MEDIUM_INCLUDE_LTALK
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ARCNET_PERMANENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ARCNET_CURRENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ARCNET_RECONFIGURATIONS)
#endif

#ifdef KNDIS_MEDIUM_INCLUDE_TAPI
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_ACCEPT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_ANSWER)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_CLOSE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_CLOSE_CALL)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_CONDITIONAL_MEDIA_DETECTION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_CONFIG_DIALOG)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_DEV_SPECIFIC)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_DIAL)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_DROP)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_GET_ADDRESS_CAPS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_GET_ADDRESS_ID)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_GET_ADDRESS_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_GET_CALL_ADDRESS_ID)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_GET_CALL_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_GET_CALL_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_GET_DEV_CAPS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_GET_DEV_CONFIG)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_GET_EXTENSION_ID)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_GET_ID)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_GET_LINE_DEV_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_MAKE_CALL)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_NEGOTIATE_EXT_VERSION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_OPEN)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_PROVIDER_INITIALIZE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_PROVIDER_SHUTDOWN)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_SECURE_CALL)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_SELECT_EXT_VERSION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_SEND_USER_USER_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_SET_APP_SPECIFIC)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_SET_CALL_PARAMS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_SET_DEFAULT_MEDIA_DETECTION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_SET_DEV_CONFIG)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_SET_MEDIA_MODE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_SET_STATUS_MESSAGES)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_GATHER_DIGITS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TAPI_MONITOR_DIGITS)
#endif

//=============================================================================
// Continuation of KNdisOidDefs.h -- Additional NDIS 5 handlers
///////////////////////////////////////////////////////////////

#ifdef KNDIS_MEDIUM_INCLUDE_ATM

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_SUPPORTED_VC_RATES)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_SUPPORTED_SERVICE_CATEGORY)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_SUPPORTED_AAL_TYPES)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_HW_CURRENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_MAX_ACTIVE_VCS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_MAX_ACTIVE_VCI_BITS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_MAX_ACTIVE_VPI_BITS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_MAX_AAL0_PACKET_SIZE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_MAX_AAL1_PACKET_SIZE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_MAX_AAL34_PACKET_SIZE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_MAX_AAL5_PACKET_SIZE)

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_SIGNALING_VPIVCI)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_ASSIGNED_VPI)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_ACQUIRE_ACCESS_NET_RESOURCES)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_RELEASE_ACCESS_NET_RESOURCES)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_ILMI_VPIVCI)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_DIGITAL_BROADCAST_VPIVCI)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_GET_NEAREST_FLOW)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_ALIGNMENT_REQUIRED)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_LECS_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_SERVICE_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_CALL_PROCEEDING)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_CALL_ALERTING)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_PARTY_ALERTING)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_CALL_NOTIFY)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_MY_IP_NM_ADDRESS)

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_RCV_CELLS_OK)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_XMIT_CELLS_OK)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_RCV_CELLS_DROPPED)

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_RCV_INVALID_VPI_VCI)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_CELLS_HEC_ERROR)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_ATM_RCV_REASSEMBLY_ERROR)
#endif

#ifdef KNDIS_MEDIUM_INCLUDE_WW
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_NETWORK_TYPES_SUPPORTED)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_NETWORK_TYPE_IN_USE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_HEADER_FORMATS_SUPPORTED)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_HEADER_FORMAT_IN_USE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_INDICATION_REQUEST)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_DEVICE_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_OPERATION_MODE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_LOCK_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_DISABLE_TRANSMITTER)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_NETWORK_ID)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_PERMANENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_CURRENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_SUSPEND_DRIVER)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_BASESTATION_ID)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_CHANNEL_ID)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_ENCRYPTION_SUPPORTED)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_ENCRYPTION_IN_USE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_ENCRYPTION_STATE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_CHANNEL_QUALITY)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_REGISTRATION_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_RADIO_LINK_SPEED)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_LATENCY)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_BATTERY_LEVEL)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_EXTERNAL_POWER)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_PING_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_RSSI)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_SIM_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_ENABLE_SIM_PIN)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_CHANGE_SIM_PIN)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_SIM_PUK)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_GEN_SIM_EXCEPTION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_MBX_TRAFFIC_AREA)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_MBX_LIVE_DIE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_MBX_TEMP_DEFAULTLIST)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_AREA_COLOR)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_TX_POWER_LEVEL)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_EID)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_HEADER_COMPRESSION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_DATA_COMPRESSION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_CHANNEL_SELECT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_CHANNEL_STATE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_NEI)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_NEI_STATE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_SERVICE_PROVIDER_IDENTIFIER)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_SLEEP_MODE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_CIRCUIT_SWITCHED)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_TEI)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_RSSI)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_CS_SERVICE_PREFERENCE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_CS_SERVICE_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_CS_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_CS_SUSPEND)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_CS_DEFAULT_DIAL_CODE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_CS_CALLBACK)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_CS_SID_LIST)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_CDPD_CS_CONFIGURATION)


DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_ARD_SNDCP)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_ARD_TMLY_MSG)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_ARD_DATAGRAM)

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_COMPRESSION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_SET_CONFIG)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_GET_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_USER_HEADER)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_UNIQUE_SDU_TAG)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_SEND_COMMAND)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_GET_RESPONSE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_DISABLE_RECEIVER)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_ANTENNA_MODE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_FLUSH_DATA)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_SHUTDOWN_DEVICE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_DEVICE_EXCEPTION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_RECEIVE_EXCEPTION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_BUFFER_EXCEPTION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_BATTERY_EXCEPTION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_TRANSMITTER_KEYED)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_SYSTEM_TABLE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_CHANNEL_TABLE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_DCHANNEL_TABLE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_RECEIVE_QUEUE_COUNT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_TAC_STATISTICS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_WW_MET_FUNCTION)

#endif



#ifdef KNDIS_MEDIUM_INCLUDE_IRDA

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_IRDA_RECEIVING)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_IRDA_TURNAROUND_TIME)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_IRDA_SUPPORTED_SPEEDS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_IRDA_LINK_SPEED)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_IRDA_MEDIA_BUSY)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_IRDA_EXTRA_RCV_BOFS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_IRDA_RATE_SNIFF)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_IRDA_UNICAST_LIST)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_IRDA_MAX_UNICAST_LIST_SIZE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_IRDA_MAX_RECEIVE_WINDOW_SIZE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_IRDA_MAX_SEND_WINDOW_SIZE)

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_IRDA_RESERVED1)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_IRDA_RESERVED2)
#endif

#ifdef KNDIS_MEDIUM_INCLUDE_BPC
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_ADAPTER_CAPS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_DEVICES)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_DEVICE_CAPS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_DEVICE_SETTINGS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_CONNECTION_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_ADDRESS_COMPARE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_PROGRAM_GUIDE)

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_POOL)


DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_CONNECT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_COMMIT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_DISCONNECT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_CONNECTION_ENABLE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_POOL_RESERVE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_POOL_RETURN)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_FORCE_RECEIVE)

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_LAST_ERROR)

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_PROVIDER_SPECIFIC)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_ADAPTER_SPECIFIC)

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_BPC_LAST)
#endif


#ifdef KNDIS_MEDIUM_INCLUDE_1394
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_1394_LOCAL_NODE_INFO)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_1394_VC_INFO)
#endif

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_TC_SUPPORTED)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_REMAINING_BANDWIDTH)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_ISSLOW_FLOW)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_BESTEFFORT_BANDWIDTH)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_LATENCY)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_FLOW_IP_CONFORMING)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_FLOW_COUNT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_NON_BESTEFFORT_LIMIT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_SCHEDULING_PROFILES_SUPPORTED)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_CURRENT_SCHEDULING_PROFILE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_TIMER_RESOLUTION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_STATISTICS_BUFFER)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_HIERARCHY_CLASS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_FLOW_MODE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_ISSLOW_FRAGMENT_SIZE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_FLOW_IP_NONCONFORMING)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_FLOW_8021P_CONFORMING)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_QOS_FLOW_8021P_NONCONFORMING)

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TCP_TASK_OFFLOAD)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TCP_TASK_IPSEC_ADD_SA)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TCP_TASK_IPSEC_DELETE_SA)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_TCP_SAN_SUPPORT)

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FFP_SUPPORT)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FFP_FLUSH)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FFP_CONTROL)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FFP_PARAMS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FFP_DATA)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FFP_DRIVER_STATS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_FFP_ADAPTER_STATS)

#ifdef KNDIS_MEDIUM_INCLUDE_CO
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_HARDWARE_STATUS )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_MEDIA_SUPPORTED )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_MEDIA_IN_USE )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_LINK_SPEED )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_VENDOR_ID )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_VENDOR_DESCRIPTION )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_DRIVER_VERSION )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_PROTOCOL_OPTIONS )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_MAC_OPTIONS )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_MEDIA_CONNECT_STATUS )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_VENDOR_DRIVER_VERSION )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_SUPPORTED_GUIDS )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_GET_TIME_CAPS )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_GET_NETCARD_TIME )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_MINIMUM_LINK_SPEED )

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_XMIT_PDUS_OK )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_RCV_PDUS_OK )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_XMIT_PDUS_ERROR )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_RCV_PDUS_ERROR )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_RCV_PDUS_NO_BUFFER )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_RCV_CRC_ERROR )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_TRANSMIT_QUEUE_LENGTH )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_BYTES_XMIT )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_BYTES_RCV )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_NETCARD_LOAD )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_DEVICE_PROFILE )
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_GEN_CO_BYTES_XMIT_OUTSTANDING )

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_ADD_PVC)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_DELETE_PVC)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_GET_CALL_INFORMATION)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_ADD_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_DELETE_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_GET_ADDRESSES)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_ADDRESS_CHANGE)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_SIGNALING_ENABLED)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_SIGNALING_DISABLED)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_AF_CLOSE)

DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_TAPI_CM_CAPS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_TAPI_LINE_CAPS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_TAPI_ADDRESS_CAPS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_TAPI_TRANSLATE_TAPI_CALLPARAMS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_TAPI_TRANSLATE_NDIS_CALLPARAMS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_TAPI_TRANSLATE_TAPI_SAP)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_TAPI_GET_CALL_DIAGNOSTICS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_TAPI_REPORT_DIGITS)
DECLARE_CO_OID_HANDLERS( KNdisMiniportVc, OID_CO_TAPI_DONT_REPORT_DIGITS)
#endif

#endif // CONDIS_MINIPORT

/////////////////////////////////////////////////////////////////////////
//
#if defined (CONDIS_CALL_MANAGER)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_HARDWARE_STATUS)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_MEDIA_SUPPORTED)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_MEDIA_IN_USE)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_MAXIMUM_LOOKAHEAD)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_MAXIMUM_FRAME_SIZE)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_LINK_SPEED)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_TRANSMIT_BUFFER_SPACE)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_RECEIVE_BUFFER_SPACE)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_TRANSMIT_BLOCK_SIZE)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_RECEIVE_BLOCK_SIZE)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_VENDOR_ID)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_VENDOR_DESCRIPTION)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_CURRENT_PACKET_FILTER)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_CURRENT_LOOKAHEAD)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_DRIVER_VERSION)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_MAXIMUM_TOTAL_SIZE)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_PROTOCOL_OPTIONS)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_MAC_OPTIONS)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_MEDIA_CONNECT_STATUS)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_MAXIMUM_SEND_PACKETS)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_VENDOR_DRIVER_VERSION)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_SUPPORTED_GUIDS)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_NETWORK_LAYER_ADDRESSES)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_TRANSPORT_HEADER_OFFSET)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_PHYSICAL_MEDIUM)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_MEDIA_CAPABILITIES)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_MACHINE_NAME)

DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_XMIT_OK)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_RCV_OK)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_XMIT_ERROR)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_RCV_ERROR)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_RCV_NO_BUFFER)

DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_DIRECTED_BYTES_XMIT)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_DIRECTED_FRAMES_XMIT)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_MULTICAST_BYTES_XMIT)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_MULTICAST_FRAMES_XMIT)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_BROADCAST_BYTES_XMIT)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_BROADCAST_FRAMES_XMIT)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_DIRECTED_BYTES_RCV)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_DIRECTED_FRAMES_RCV)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_MULTICAST_BYTES_RCV)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_MULTICAST_FRAMES_RCV)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_BROADCAST_BYTES_RCV)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_BROADCAST_FRAMES_RCV)

DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_RCV_CRC_ERROR)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_TRANSMIT_QUEUE_LENGTH)

DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_GET_TIME_CAPS)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_GET_NETCARD_TIME)

DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_NETCARD_LOAD)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_DEVICE_PROFILE)

DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_INIT_TIME_MS)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_RESET_COUNTS)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_GEN_MEDIA_SENSE_COUNTS)

////////////////////////////////////
// GEN_CO_ are mapped to normal GEN_

///////////////////////////////////
// Ethertnet
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_802_3_PERMANENT_ADDRESS)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_802_3_CURRENT_ADDRESS)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_802_3_MULTICAST_LIST)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_802_3_MAXIMUM_LIST_SIZE)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_802_3_MAC_OPTIONS)

DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_802_3_RCV_ERROR_ALIGNMENT)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_802_3_XMIT_ONE_COLLISION)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_802_3_XMIT_MORE_COLLISIONS)

DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_802_3_XMIT_DEFERRED)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_802_3_XMIT_MAX_COLLISIONS)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_802_3_RCV_OVERRUN)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_802_3_XMIT_UNDERRUN)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_802_3_XMIT_HEARTBEAT_FAILURE)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_802_3_XMIT_TIMES_CRS_LOST)
DECLARE_CO_OID_HANDLERS ( KNdisCallManagerVc, OID_802_3_XMIT_LATE_COLLISIONS)

////////////////////////////////////
//	PnP and PM OIDs
//
#if (KNDIS_PNP_AWARE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_PNP_CAPABILITIES	)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_PNP_SET_POWER		)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_PNP_QUERY_POWER	)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_PNP_ADD_WAKE_UP_PATTERN)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_PNP_REMOVE_WAKE_UP_PATTERN)
// DECLARE_CO_OID_HANDLERS( OID_PNP_WAKE_UP_PATTERN_LIST) -- not handled by miniports
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_PNP_ENABLE_WAKE_UP	)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_PNP_WAKE_UP_OK		)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_PNP_WAKE_UP_ERROR	)
#endif

//=============================================================================
// Continuation of KNdisOidDefs.h -- Additional NDIS 4 handlers
///////////////////////////////////////////////////////////////

#ifdef	KNDIS_MEDIUM_INCLUDE_802_5
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_802_5_PERMANENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_802_5_CURRENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_802_5_CURRENT_FUNCTIONAL)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_802_5_CURRENT_GROUP)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_802_5_LAST_OPEN_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_802_5_CURRENT_RING_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_802_5_CURRENT_RING_STATE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_802_5_LINE_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_802_5_LOST_FRAMES)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_802_5_BURST_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_802_5_AC_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_802_5_ABORT_DELIMETERS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_802_5_FRAME_COPIED_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_802_5_FREQUENCY_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_802_5_TOKEN_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_802_5_INTERNAL_ERRORS)
#endif

#ifdef	KNDIS_MEDIUM_INCLUDE_FDDI
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_LONG_PERMANENT_ADDR)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_LONG_CURRENT_ADDR)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_LONG_MULTICAST_LIST)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_LONG_MAX_LIST_SIZE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SHORT_PERMANENT_ADDR)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SHORT_CURRENT_ADDR)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SHORT_MULTICAST_LIST)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SHORT_MAX_LIST_SIZE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_ATTACHMENT_TYPE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_UPSTREAM_NODE_LONG)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_DOWNSTREAM_NODE_LONG)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_FRAME_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_FRAMES_LOST)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_RING_MGT_STATE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_LCT_FAILURES)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_LEM_REJECTS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_LCONNECTION_STATE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_STATION_ID)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_OP_VERSION_ID)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_HI_VERSION_ID)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_LO_VERSION_ID)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_MANUFACTURER_DATA)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_USER_DATA)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_MIB_VERSION_ID)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_MAC_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_NON_MASTER_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_MASTER_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_AVAILABLE_PATHS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_CONFIG_CAPABILITIES)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_CONFIG_POLICY)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_CONNECTION_POLICY)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_T_NOTIFY)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_STAT_RPT_POLICY)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_TRACE_MAX_EXPIRATION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_PORT_INDEXES)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_MAC_INDEXES)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_BYPASS_PRESENT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_ECM_STATE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_CF_STATE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_HOLD_STATE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_REMOTE_DISCONNECT_FLAG)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_STATION_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_PEER_WRAP_FLAG)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_MSG_TIME_STAMP)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_TRANSITION_TIME_STAMP)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_SET_COUNT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_LAST_SET_STATION_ID)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_FRAME_STATUS_FUNCTIONS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_BRIDGE_FUNCTIONS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_INDEX)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_SMT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_LONG_GRP_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_SHORT_GRP_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_T_REQ)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_T_NEG)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_T_MAX)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_TVX_VALUE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_T_PRI0)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_T_PRI1)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_T_PRI2)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_T_PRI3)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_T_PRI4)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_T_PRI5)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_T_PRI6)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_FRAME_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_COPIED_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_TRANSMIT_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_TOKEN_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_ERROR_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_LOST_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_TVX_EXPIRED_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_NOT_COPIED_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_LATE_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_RING_OP_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_FRAME_ERROR_THRESHOLD)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_FRAME_ERROR_RATIO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_NOT_COPIED_THRESHOLD)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_NOT_COPIED_RATIO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_RMT_STATE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_HARDWARE_PRESENT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_MAC_MA_UNITDATA_ENABLE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PATH_INDEX)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PATH_RING_LATENCY)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PATH_TRACE_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PATH_SBA_PAYLOAD)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PATH_SBA_OVERHEAD)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PATH_CONFIGURATION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PATH_T_R_MODE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PATH_SBA_AVAILABLE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PATH_TVX_LOWER_BOUND)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PATH_T_MAX_LOWER_BOUND)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PATH_MAX_T_REQ)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_MY_TYPE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_NEIGHBOR_TYPE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_CONNECTION_POLICIES)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_MAC_INDICATED)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_CURRENT_PATH)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_REQUESTED_PATHS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_MAC_PLACEMENT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_AVAILABLE_PATHS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_MAC_LOOP_TIME)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_PMD_CLASS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_CONNECTION_CAPABILITIES)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_INDEX)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_MAINT_LS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_BS_FLAG)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_PC_LS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_EB_ERROR_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_LCT_FAIL_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_LER_ESTIMATE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_LEM_REJECT_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_LEM_CT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_LER_CUTOFF)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_LER_ALARM)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_CONNNECT_STATE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_PCM_STATE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_PC_WITHHOLD)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_LER_FLAG)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_HARDWARE_PRESENT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_SMT_STATION_ACTION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_PORT_ACTION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_DESCR)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_TYPE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_MTU)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_SPEED)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_PHYS_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_ADMIN_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_OPER_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_LAST_CHANGE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_IN_OCTETS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_IN_UCAST_PKTS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_IN_NUCAST_PKTS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_IN_DISCARDS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_IN_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_IN_UNKNOWN_PROTOS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_OUT_OCTETS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_OUT_UCAST_PKTS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_OUT_NUCAST_PKTS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_OUT_DISCARDS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_OUT_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_OUT_QLEN)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FDDI_IF_SPECIFIC)
#endif

#ifdef KNDIS_MEDIUM_INCLUDE_WAN
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_PERMANENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_CURRENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_QUALITY_OF_SERVICE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_PROTOCOL_TYPE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_MEDIUM_SUBTYPE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_HEADER_FORMAT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_GET_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_SET_LINK_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_GET_LINK_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_LINE_COUNT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_PROTOCOL_CAPS)

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_GET_BRIDGE_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_SET_BRIDGE_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_GET_COMP_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_SET_COMP_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_GET_STATS_INFO)

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_CO_GET_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_CO_GET_LINK_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_CO_SET_LINK_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_LTALK_CURRENT_NODE_ID)

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_CO_GET_COMP_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_CO_SET_COMP_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WAN_CO_GET_STATS_INFO)
#endif

#ifdef KNDIS_MEDIUM_INCLUDE_LTALK
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_LTALK_IN_BROADCASTS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_LTALK_IN_LENGTH_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_LTALK_OUT_NO_HANDLERS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_LTALK_COLLISIONS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_LTALK_DEFERS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_LTALK_NO_DATA_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_LTALK_RANDOM_CTS_ERRORS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_LTALK_FCS_ERRORS)
#endif

#ifdef KNDIS_MEDIUM_INCLUDE_LTALK
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ARCNET_PERMANENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ARCNET_CURRENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ARCNET_RECONFIGURATIONS)
#endif

#ifdef KNDIS_MEDIUM_INCLUDE_TAPI
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_ACCEPT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_ANSWER)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_CLOSE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_CLOSE_CALL)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_CONDITIONAL_MEDIA_DETECTION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_CONFIG_DIALOG)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_DEV_SPECIFIC)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_DIAL)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_DROP)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_GET_ADDRESS_CAPS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_GET_ADDRESS_ID)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_GET_ADDRESS_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_GET_CALL_ADDRESS_ID)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_GET_CALL_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_GET_CALL_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_GET_DEV_CAPS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_GET_DEV_CONFIG)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_GET_EXTENSION_ID)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_GET_ID)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_GET_LINE_DEV_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_MAKE_CALL)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_NEGOTIATE_EXT_VERSION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_OPEN)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_PROVIDER_INITIALIZE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_PROVIDER_SHUTDOWN)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_SECURE_CALL)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_SELECT_EXT_VERSION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_SEND_USER_USER_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_SET_APP_SPECIFIC)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_SET_CALL_PARAMS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_SET_DEFAULT_MEDIA_DETECTION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_SET_DEV_CONFIG)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_SET_MEDIA_MODE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_SET_STATUS_MESSAGES)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_GATHER_DIGITS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TAPI_MONITOR_DIGITS)
#endif

//=============================================================================
// Continuation of KNdisOidDefs.h -- Additional NDIS 5 handlers
///////////////////////////////////////////////////////////////

#ifdef KNDIS_MEDIUM_INCLUDE_ATM

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_SUPPORTED_VC_RATES)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_SUPPORTED_SERVICE_CATEGORY)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_SUPPORTED_AAL_TYPES)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_HW_CURRENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_MAX_ACTIVE_VCS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_MAX_ACTIVE_VCI_BITS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_MAX_ACTIVE_VPI_BITS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_MAX_AAL0_PACKET_SIZE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_MAX_AAL1_PACKET_SIZE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_MAX_AAL34_PACKET_SIZE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_MAX_AAL5_PACKET_SIZE)

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_SIGNALING_VPIVCI)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_ASSIGNED_VPI)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_ACQUIRE_ACCESS_NET_RESOURCES)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_RELEASE_ACCESS_NET_RESOURCES)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_ILMI_VPIVCI)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_DIGITAL_BROADCAST_VPIVCI)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_GET_NEAREST_FLOW)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_ALIGNMENT_REQUIRED)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_LECS_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_SERVICE_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_CALL_PROCEEDING)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_CALL_ALERTING)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_PARTY_ALERTING)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_CALL_NOTIFY)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_MY_IP_NM_ADDRESS)

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_RCV_CELLS_OK)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_XMIT_CELLS_OK)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_RCV_CELLS_DROPPED)

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_RCV_INVALID_VPI_VCI)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_CELLS_HEC_ERROR)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_ATM_RCV_REASSEMBLY_ERROR)
#endif

#ifdef KNDIS_MEDIUM_INCLUDE_WW
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_NETWORK_TYPES_SUPPORTED)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_NETWORK_TYPE_IN_USE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_HEADER_FORMATS_SUPPORTED)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_HEADER_FORMAT_IN_USE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_INDICATION_REQUEST)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_DEVICE_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_OPERATION_MODE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_LOCK_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_DISABLE_TRANSMITTER)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_NETWORK_ID)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_PERMANENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_CURRENT_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_SUSPEND_DRIVER)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_BASESTATION_ID)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_CHANNEL_ID)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_ENCRYPTION_SUPPORTED)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_ENCRYPTION_IN_USE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_ENCRYPTION_STATE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_CHANNEL_QUALITY)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_REGISTRATION_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_RADIO_LINK_SPEED)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_LATENCY)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_BATTERY_LEVEL)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_EXTERNAL_POWER)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_PING_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_RSSI)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_SIM_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_ENABLE_SIM_PIN)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_CHANGE_SIM_PIN)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_SIM_PUK)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_GEN_SIM_EXCEPTION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_MBX_TRAFFIC_AREA)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_MBX_LIVE_DIE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_MBX_TEMP_DEFAULTLIST)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_AREA_COLOR)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_TX_POWER_LEVEL)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_EID)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_HEADER_COMPRESSION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_DATA_COMPRESSION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_CHANNEL_SELECT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_CHANNEL_STATE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_NEI)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_NEI_STATE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_SERVICE_PROVIDER_IDENTIFIER)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_SLEEP_MODE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_CIRCUIT_SWITCHED)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_TEI)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_RSSI)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_CS_SERVICE_PREFERENCE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_CS_SERVICE_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_CS_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_CS_SUSPEND)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_CS_DEFAULT_DIAL_CODE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_CS_CALLBACK)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_CS_SID_LIST)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_CDPD_CS_CONFIGURATION)


DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_ARD_SNDCP)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_ARD_TMLY_MSG)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_ARD_DATAGRAM)

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_COMPRESSION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_SET_CONFIG)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_GET_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_USER_HEADER)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_UNIQUE_SDU_TAG)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_SEND_COMMAND)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_GET_RESPONSE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_DISABLE_RECEIVER)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_ANTENNA_MODE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_FLUSH_DATA)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_SHUTDOWN_DEVICE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_DEVICE_EXCEPTION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_RECEIVE_EXCEPTION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_BUFFER_EXCEPTION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_BATTERY_EXCEPTION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_TRANSMITTER_KEYED)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_SYSTEM_TABLE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_CHANNEL_TABLE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_DCHANNEL_TABLE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_RECEIVE_QUEUE_COUNT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_TAC_STATISTICS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_WW_MET_FUNCTION)

#endif



#ifdef KNDIS_MEDIUM_INCLUDE_IRDA

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_IRDA_RECEIVING)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_IRDA_TURNAROUND_TIME)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_IRDA_SUPPORTED_SPEEDS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_IRDA_LINK_SPEED)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_IRDA_MEDIA_BUSY)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_IRDA_EXTRA_RCV_BOFS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_IRDA_RATE_SNIFF)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_IRDA_UNICAST_LIST)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_IRDA_MAX_UNICAST_LIST_SIZE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_IRDA_MAX_RECEIVE_WINDOW_SIZE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_IRDA_MAX_SEND_WINDOW_SIZE)

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_IRDA_RESERVED1)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_IRDA_RESERVED2)
#endif

#ifdef KNDIS_MEDIUM_INCLUDE_BPC
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_ADAPTER_CAPS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_DEVICES)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_DEVICE_CAPS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_DEVICE_SETTINGS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_CONNECTION_STATUS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_ADDRESS_COMPARE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_PROGRAM_GUIDE)

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_POOL)


DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_CONNECT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_COMMIT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_DISCONNECT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_CONNECTION_ENABLE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_POOL_RESERVE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_POOL_RETURN)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_FORCE_RECEIVE)

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_LAST_ERROR)

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_PROVIDER_SPECIFIC)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_ADAPTER_SPECIFIC)

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_BPC_LAST)
#endif


#ifdef KNDIS_MEDIUM_INCLUDE_1394
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_1394_LOCAL_NODE_INFO)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_1394_VC_INFO)
#endif

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_TC_SUPPORTED)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_REMAINING_BANDWIDTH)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_ISSLOW_FLOW)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_BESTEFFORT_BANDWIDTH)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_LATENCY)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_FLOW_IP_CONFORMING)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_FLOW_COUNT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_NON_BESTEFFORT_LIMIT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_SCHEDULING_PROFILES_SUPPORTED)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_CURRENT_SCHEDULING_PROFILE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_TIMER_RESOLUTION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_STATISTICS_BUFFER)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_HIERARCHY_CLASS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_FLOW_MODE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_ISSLOW_FRAGMENT_SIZE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_FLOW_IP_NONCONFORMING)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_FLOW_8021P_CONFORMING)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_QOS_FLOW_8021P_NONCONFORMING)

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TCP_TASK_OFFLOAD)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TCP_TASK_IPSEC_ADD_SA)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TCP_TASK_IPSEC_DELETE_SA)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_TCP_SAN_SUPPORT)

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FFP_SUPPORT)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FFP_FLUSH)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FFP_CONTROL)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FFP_PARAMS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FFP_DATA)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FFP_DRIVER_STATS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_FFP_ADAPTER_STATS)

#ifdef KNDIS_MEDIUM_INCLUDE_CO
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_HARDWARE_STATUS )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_MEDIA_SUPPORTED )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_MEDIA_IN_USE )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_LINK_SPEED )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_VENDOR_ID )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_VENDOR_DESCRIPTION )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_DRIVER_VERSION )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_PROTOCOL_OPTIONS )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_MAC_OPTIONS )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_MEDIA_CONNECT_STATUS )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_VENDOR_DRIVER_VERSION )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_SUPPORTED_GUIDS )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_GET_TIME_CAPS )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_GET_NETCARD_TIME )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_MINIMUM_LINK_SPEED )

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_XMIT_PDUS_OK )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_RCV_PDUS_OK )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_XMIT_PDUS_ERROR )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_RCV_PDUS_ERROR )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_RCV_PDUS_NO_BUFFER )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_RCV_CRC_ERROR )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_TRANSMIT_QUEUE_LENGTH )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_BYTES_XMIT )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_BYTES_RCV )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_NETCARD_LOAD )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_DEVICE_PROFILE )
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_GEN_CO_BYTES_XMIT_OUTSTANDING )

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_ADD_PVC)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_DELETE_PVC)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_GET_CALL_INFORMATION)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_ADD_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_DELETE_ADDRESS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_GET_ADDRESSES)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_ADDRESS_CHANGE)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_SIGNALING_ENABLED)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_SIGNALING_DISABLED)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_AF_CLOSE)

DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_TAPI_CM_CAPS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_TAPI_LINE_CAPS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_TAPI_ADDRESS_CAPS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_TAPI_TRANSLATE_TAPI_CALLPARAMS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_TAPI_TRANSLATE_NDIS_CALLPARAMS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_TAPI_TRANSLATE_TAPI_SAP)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_TAPI_GET_CALL_DIAGNOSTICS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_TAPI_REPORT_DIGITS)
DECLARE_CO_OID_HANDLERS( KNdisCallManagerVc, OID_CO_TAPI_DONT_REPORT_DIGITS)
#endif

#endif // CONDIS_CALL_MANAGER
/////////////////////////////////////////////////////////////////////////
// Add framework's FRIEND classes that can access protected methods of
// the adapters. Piggyback on the fact that this file is to be included
// in the adapter class declaration.
//
#endif // KNDIS_DDK_VERSION >= 5
#endif // !defined(__KNDIS_CO_OID_DEFS_H__)
