// E100bexDrv.cpp: implementation of the E100bexDriver class.
//
//=============================================================================
//
// Compuware Corporation
// NuMega Lab
// 9 Townsend West
// Nashua, NH 03060  USA
//
// Copyright (c) 2000 Compuware Corporation. All Rights Reserved.
// Unpublished - rights reserved under the Copyright laws of the
// United States.
//
//=============================================================================
//
// Portions copied from Microsoft Windows 2000 DDK sample driver containing the
// following copyright
//
/****************************************************************************
** COPYRIGHT (C) 1994-1997 INTEL CORPORATION                               **
** DEVELOPED FOR MICROSOFT BY INTEL CORP., HILLSBORO, OREGON               **
** HTTP://WWW.INTEL.COM/                                                   **
** THIS FILE IS PART OF THE INTEL ETHEREXPRESS PRO/100B(TM) AND            **
** ETHEREXPRESS PRO/100+(TM) NDIS 5.0 MINIPORT SAMPLE DRIVER               **
****************************************************************************/


#include <kndis.h>
#include "E100bexInc.h"


///////////////////////////////////////////////////////////////////
// Begin INIT time code
//
// Code in section INIT is discarded after the driver initializes
//#pragma code_seg("INIT")

#include "Characteristics.h" // generated by wizard

// The wizard inserts the following macro (declares the driver class)

DECLARE_MINIDRIVER_CLASS(E100bexDriver)

//////////////////////////////////////////////////////////////////////
// E100bexDriver	Implementation

/////////////////////////////////////////////////////////////////////
// E100bexDriver::DriverEntry
//
// This method registers adapter characteristics (a handler pointer table)
// with NDIS. Usually that's all this function has to do.
//
// Returns:
//	Status code of registration. Usually, it's NDIS_STATUS_SUCCESS.
//  Returning any other code prevents the driver from being loaded.
NTSTATUS E100bexDriver::DriverEntry(IN PVOID)
{
	TRACE("E100bexDriver::DriverEntry\n");

	KNDIS_MINIPORT_CHARACTERISTICS<E100bexAdapter> Chars;
	return	Chars.Register(*this);	
}

 