//////////////////////////////////////////////////////////////////////
// coisdn.cpp - KNdisMiniDriver-derived implementation
//
//=============================================================================
//
// Compuware Corporation
// NuMega Lab
// 9 Townsend West
// Nashua, NH 03063  USA
//
// Copyright (c) 2001 Compuware Corporation. All Rights Reserved.
// Unpublished - rights reserved under the Copyright laws of the
// United States.
//
//=============================================================================
//////////////////////////////////////////////////////////////////////
//
// Generated by Network Driver Wizard on Monday, July 22, 2002
//				  

#include "CoIsdnDrv.h"
#include "CoIsdnAdap.h"
#include "KNdisCoMiniportChars.h"
#include "BChannel.h"

///////////////////////////////////////////////////////////////////
// Begin INIT time code
//
// Code in section INIT is discarded after the driver initializes
//#pragma code_seg("INIT")


// The following macro declares the driver class:

DECLARE_MINIDRIVER_CLASS(CoIsdnDriver)

KNdisTrace g_trace;

//////////////////////////////////////////////////////////////////////
// CoIsdnDriver	Implementation

/////////////////////////////////////////////////////////////////////
// CoIsdnDriver::DriverEntry
//
// This method registers adapter characteristics (a handler pointer table)
// with NDIS. Usually that's all this function has to do.
//
// Returns:
//	Status code of registration. Usually, it's NDIS_STATUS_SUCCESS.
//  Returning any other code prevents the driver from being loaded.
NTSTATUS CoIsdnDriver::DriverEntry(IN PVOID)
{
	TRACE("CoIsdnDriver::DriverEntry Compiled at " __TIME__ " on " __DATE__ "\n");
    
	KNDIS_COMINIPORT_CHARACTERISTICS<CoIsdnAdapter, CBChannel> Chars;
	return	Chars.Register(*this);	
}

