// NmPacketControlDevice.h
//
//=============================================================================
//
// Compuware Corporation
// NuMega Lab
// 9 Townsend West
// Nashua, NH 03060  USA
//
// Copyright (c) 2001 Compuware Corporation. All Rights Reserved.
// Unpublished - rights reserved under the Copyright laws of the
// United States.
//
//=============================================================================
// Generated by DriverWizard version DriverStudio 2.0.0 (Build 4409)
// Requires Compuware's DriverWorks classes
//

#ifndef __NmPacketControlDevice_h__
#define __NmPacketControlDevice_h__

class NmPacketBinding; /// fwd decl

//////////////////////////////////////////////////////////////////
// NmPacketControlDevice
//
// Device object representing a control channel of the driver.
// It is used to only enumerate the available bindings by a Win32 app.
//
class NmPacketControlDevice : public KDevice
{
	// Constructors
public:
	SAFE_DESTRUCTORS;
	NmPacketControlDevice();
	~NmPacketControlDevice();

	// Member Functions
public:
	// DEVMEMBER_DISPATCHERS -  do not use here.
	// DriverWorks has known function.h limitations for drivers with heterogenious devices. 
	// See mk:@MSITStore:C:\Program%20Files\NuMega\DriverStudio\Help\vdw.chm::/VdwThe_functionh_file.htm

	NTSTATUS CleanUp(KIrp I); 				
	NTSTATUS Close(KIrp I);					
	NTSTATUS Create(KIrp I); 				
	NTSTATUS DeviceControl(KIrp I);
	NTSTATUS Shutdown(KIrp I);

	NTSTATUS IOCTL_ENUM_ADAPTERS_Handler(KIrp I);

	// Stub read/write. They have to be present due 
	// to DW function.h's limitations with heterogenious devices 

	// Member Data
protected:
	// Used in constructor/destructor to hold registry path
	KUnitizedName *		m_RegPath;

	// Retrieves adapter list for existing bindings
	NTSTATUS GetAdapterList(PVOID Buffer, ULONG Length, PULONG DataLength);
	
	// Helper class-functon for copying node's data into output buffer.
	// Used by KListBrowser::ForEach() method. 
	// The function operator is called for each node found in the list.
	
	struct NodeCopier {
		// Parameters describing the state of the copy
		struct Parameters {
			ULONG	NumOfNodes;		// number of nodes passed
			PCHAR	buf;			// current buffer pointer
			ULONG	total;			// buffer size total
			ULONG	avail;			// buffer size remaining
			ULONG	required;		// buffer size required
			// ctor-initializer
			Parameters(PCHAR start, ULONG size) : 
				buf(start), required(0), NumOfNodes(0) {total=avail=size;}
		};
		// Reference to current state of the copy operation
		Parameters& state;		
		
		// ctor passed as a functor
		NodeCopier(Parameters& Params) : state(Params) {}
		
		// Moves Binding's device name and symlink to buffer described by state
		void operator() (NmPacketBinding* b);
	}; 
	
	// Pending request counter
	KNdisRefCounter		m_PendingIrps;


};


#endif		// __NmPacketControlDevice_h__
