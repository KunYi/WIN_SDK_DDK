[TPCTL:] ReadScript \tps\scripts\2\1\1\2\srv\1.tps
[TPCTL:] #	-SECTION_START-( 1.00 ) -SECTION_DESC-( "Send Broadcast, Receive Directed-server-side" )
[TPCTL:] ##
[TPCTL:] ## TITLE: 2.1.1.2.1 Send Broadcast, Receive Directed (2M/1C/1O) server-side
[TPCTL:] ##
[TPCTL:] ## 2 Machine - 1 Card - 1 Open Instance on the card.  These tests
[TPCTL:] ## will have the trusted card on one machine send 10 BROADCAST packets
[TPCTL:] ## to the card being tested on another machine.  The test card will
[TPCTL:] ## have its packetfilter set to receive DIRECTED packets.  Packets
[TPCTL:] ## of size 40 bytes, 512 bytes, and MAX_FRAME_SIZE bytes will be
[TPCTL:] ## sent.
[TPCTL:] ##
[TPCTL:] ## The server side of the test is run on the machine with the trusted
[TPCTL:] ## card installed.
[TPCTL:] ##
[TPCTL:] ## No packets should be received by the test card.
[TPCTL:] ##
[TPCTL:] 
[TPCTL:] # First dump any outstanding unexpected events to clear
[TPCTL:] # the event queue.  This "should" be empty here.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 1.01 )
[TPCTL:] GetEvents                                       +
	     OpenInstance=1

	Tpctl: Event Queue is empty.	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 1.01 )
[TPCTL:] 
[TPCTL:] # And open and setup the cards.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 1.02 )
[TPCTL:] Open                                            +
	     OpenInstance=1                              +
	     AdapterName=TP_TRUSTED_CARD   MAY_DIFFER

	Tpctl: The Open command has been issued.

	CmdCode = Open
	Return Status = NDIS_STATUS_SUCCESS
	Request Pended = TRUE	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 1.02 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 1.03 )
[TPCTL:] SetPacketFilter                                 +
	     OpenInstance=1                              +
	     PacketFilter=DIRECTED

	Tpctl: The SetPacketFilter command has been issued.

	CmdCode = SetPacketFilter

	    OID = 0x0001010E
            "OID_GEN_CURRENT_PACKET_FILTER"

	Return Status = NDIS_STATUS_SUCCESS
	Request Pended = TRUE		MAY_DIFFER

	**********************************
[TPCTL:] #	-SECTION_END-( 1.03 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Now wait for the server side to start the test
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 1.04 )
[TPCTL:] Pause                                           +
	     OpenInstance=1                              +
	     RemoteAddress=TP_REM_TEST_CARD_ADDRESS   MAY_DIFFER    +
	     TestSignature=211211
[TPCTL:] #	-SECTION_END-( 1.04 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Then start the test,
[TPCTL:] 
[TPCTL:] # Send 40 byte packets.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 1.05 )
[TPCTL:] Send                                            +
	     OpenInstance=1                              +
	     DestinationAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER   +
	     PacketSize=40                               +
	     Number=10

	Tpctl: The Send command has been issued.
[TPCTL:] #	-SECTION_END-( 1.05 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 1.06 )
[TPCTL:] WaitSend                                        +
	     OpenInstance=1

	Packet Sends          =         10
	Packet Pends          =         10	MAY_DIFFER
	Packet Send Completes =         10	EQUAL_LAST
	Packet Send Fails     =          0
[TPCTL:] #	-SECTION_END-( 1.06 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Send 512 byte packets.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 1.07 )
[TPCTL:] Send                                            +
	     OpenInstance=1                              +
	     DestinationAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER   +
	     PacketSize=512                              +
	     Number=10

	Tpctl: The Send command has been issued.
[TPCTL:] #	-SECTION_END-( 1.07 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 1.08 )
[TPCTL:] WaitSend                                        +
	     OpenInstance=1

	Packet Sends          =         10
	Packet Pends          =         10	MAY_DIFFER
	Packet Send Completes =         10	EQUAL_LAST
	Packet Send Fails     =          0
[TPCTL:] #	-SECTION_END-( 1.08 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Send "MAXIMUM FRAME SIZE" byte packets.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 1.09 )
[TPCTL:] Send                                            +
	     OpenInstance=1                              +
	     DestinationAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER   +
	     PacketSize=TP_MAX_FRAME_SIZE   MAY_DIFFER              +
	     Number=10

	Tpctl: The Send command has been issued.
[TPCTL:] #	-SECTION_END-( 1.09 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 1.10 )
[TPCTL:] WaitSend                                        +
	     OpenInstance=1

	Packet Sends          =         10
	Packet Pends          =         10	MAY_DIFFER
	Packet Send Completes =         10	EQUAL_LAST
	Packet Send Fails     =          0
[TPCTL:] #	-SECTION_END-( 1.10 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Now tell the server side to clean up.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 1.11 )
[TPCTL:] Go                                              +
	     OpenInstance=1                              +
	     RemoteAddress=TP_REM_TEST_CARD_ADDRESS   MAY_DIFFER    +
	     TestSignature=211212
[TPCTL:] #	-SECTION_END-( 1.11 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Finally close the adapter, and again dump the Event
[TPCTL:] # Queue for any unexpected events.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 1.12 )
[TPCTL:] Close                                           +
	     OpenInstance=1

	Tpctl: The Close command has been issued.

	CmdCode = Close
	Return Status = NDIS_STATUS_SUCCESS
	Request Pended = TRUE	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 1.12 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 1.13 )
[TPCTL:] GetEvents                                       +
	     OpenInstance=1

	Tpctl: Event Queue is empty.	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 1.13 )
[TPCTL:] 
[TPCTL:] #	-SECTION_END-( 1.00 )
[TPCTL:] ReadScript \tps\scripts\2\1\1\2\srv\2.tps
[TPCTL:] #	-SECTION_START-( 2.00 ) -SECTION_DESC-( "Send Broadcast, Receive Broadcast-server-side" )
[TPCTL:] ##
[TPCTL:] ## TITLE: 2.1.1.2.2 Send Broadcast, Receive Broadcast (2M/1C/1O) server-side
[TPCTL:] ##
[TPCTL:] ## 2 Machine - 1 Card - 1 Open Instance on the card.  These tests
[TPCTL:] ## will have the trusted card on one machine send 10 BROADCAST packets
[TPCTL:] ## to the card being tested on another machine.  The test card will
[TPCTL:] ## have its packetfilter set to receive BROADCAST packets.  Packets
[TPCTL:] ## of size 40 bytes, 512 bytes, and MAX_FRAME_SIZE bytes will be
[TPCTL:] ## sent.
[TPCTL:] ##
[TPCTL:] ## The server side of the test is run on the machine with the trusted
[TPCTL:] ## card installed.
[TPCTL:] ##
[TPCTL:] ## All SEND packets should be received by the test card.
[TPCTL:] ##
[TPCTL:] 
[TPCTL:] # First dump any outstanding unexpected events to clear
[TPCTL:] # the event queue.  This "should" be empty here.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 2.01 )
[TPCTL:] GetEvents                                       +
	     OpenInstance=1

	Tpctl: Event Queue is empty.	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 2.01 )
[TPCTL:] 
[TPCTL:] # And open and setup the cards.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 2.02 )
[TPCTL:] Open                                            +
	     OpenInstance=1                              +
	     AdapterName=TP_TRUSTED_CARD   MAY_DIFFER

	Tpctl: The Open command has been issued.

	CmdCode = Open
	Return Status = NDIS_STATUS_SUCCESS
	Request Pended = TRUE	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 2.02 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 2.03 )
[TPCTL:] SetPacketFilter                                 +
	     OpenInstance=1                              +
	     PacketFilter=DIRECTED

	Tpctl: The SetPacketFilter command has been issued.

	CmdCode = SetPacketFilter

	    OID = 0x0001010E
            "OID_GEN_CURRENT_PACKET_FILTER"

	Return Status = NDIS_STATUS_SUCCESS
	Request Pended = TRUE		MAY_DIFFER

	**********************************
[TPCTL:] #	-SECTION_END-( 2.03 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Now wait for the server side to start the test
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 2.04 )
[TPCTL:] Pause                                           +
	     OpenInstance=1                              +
	     RemoteAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER        +
	     TestSignature=211221
[TPCTL:] #	-SECTION_END-( 2.04 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Then start the test,
[TPCTL:] 
[TPCTL:] # Send 40 byte packets.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 2.05 )
[TPCTL:] Send                                            +
	     OpenInstance=1                              +
	     DestinationAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER   +
	     PacketSize=40                               +
	     Number=10

	Tpctl: The Send command has been issued.
[TPCTL:] #	-SECTION_END-( 2.05 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 2.06 )
[TPCTL:] WaitSend                                        +
	     OpenInstance=1

	Packet Sends          =         10
	Packet Pends          =         10	MAY_DIFFER
	Packet Send Completes =         10	EQUAL_LAST
	Packet Send Fails     =          0
[TPCTL:] #	-SECTION_END-( 2.06 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Send 512 byte packets.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 2.07 )
[TPCTL:] Send                                            +
	     OpenInstance=1                              +
	     DestinationAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER   +
	     PacketSize=512                              +
	     Number=10

	Tpctl: The Send command has been issued.
[TPCTL:] #	-SECTION_END-( 2.07 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 2.08 )
[TPCTL:] WaitSend                                        +
	     OpenInstance=1

	Packet Sends          =         10
	Packet Pends          =         10	MAY_DIFFER
	Packet Send Completes =         10	EQUAL_LAST
	Packet Send Fails     =          0
[TPCTL:] #	-SECTION_END-( 2.08 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Send "MAXIMUM FRAME SIZE" byte packets.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 2.09 )
[TPCTL:] Send                                            +
	     OpenInstance=1                              +
	     DestinationAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER   +
	     PacketSize=TP_MAX_FRAME_SIZE   MAY_DIFFER              +
	     Number=10

	Tpctl: The Send command has been issued.
[TPCTL:] #	-SECTION_END-( 2.09 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 2.10 )
[TPCTL:] WaitSend                                        +
	     OpenInstance=1

	Packet Sends          =         10
	Packet Pends          =         10	MAY_DIFFER
	Packet Send Completes =         10	EQUAL_LAST
	Packet Send Fails     =          0
[TPCTL:] #	-SECTION_END-( 2.10 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Now tell the server side to clean up.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 2.11 )
[TPCTL:] Go                                              +
	     OpenInstance=1                              +
	     RemoteAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER        +
	     TestSignature=211222
[TPCTL:] #	-SECTION_END-( 2.11 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Finally close the adapter, and again dump the Event
[TPCTL:] # Queue for any unexpected events.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 2.12 )
[TPCTL:] Close                                           +
	     OpenInstance=1

	Tpctl: The Close command has been issued.

	CmdCode = Close
	Return Status = NDIS_STATUS_SUCCESS
	Request Pended = TRUE	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 2.12 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 2.13 )
[TPCTL:] GetEvents                                       +
	     OpenInstance=1

	Tpctl: Event Queue is empty.	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 2.13 )
[TPCTL:] 
[TPCTL:] #	-SECTION_END-( 2.00 )
[TPCTL:] ReadScript \tps\scripts\2\1\1\2\srv\3.tps
[TPCTL:] #	-SECTION_START-( 3.00 ) -SECTION_DESC-( "Send Broadcast, Receive Promiscuous-server-side" ) -OPTIONALS-( PROMISCUOUS )
[TPCTL:] ##
[TPCTL:] ## TITLE: 2.1.1.2.3 Send Broadcast, Receive Promiscuous (2M/1C/1O) server-side
[TPCTL:] ##
[TPCTL:] ## 2 Machine - 1 Card - 1 Open Instance on the card.  These tests
[TPCTL:] ## will have the trusted card on one machine send 10 BROADCAST packets
[TPCTL:] ## to the card being tested on another machine.  The test card will
[TPCTL:] ## have its packetfilter set to receive PROMISCUOUS packets.  Packets
[TPCTL:] ## of size 40 bytes, 512 bytes, and MAX_FRAME_SIZE bytes will be
[TPCTL:] ## sent.
[TPCTL:] ##
[TPCTL:] ## The server side of the test is run on the machine with the trusted
[TPCTL:] ## card installed.
[TPCTL:] ##
[TPCTL:] ## No packets should be received by the test card.
[TPCTL:] ##
[TPCTL:] 
[TPCTL:] Disable PROMISCUOUS
[TPCTL:] 
[TPCTL:] # First dump any outstanding unexpected events to clear
[TPCTL:] # the event queue.  This "should" be empty here.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 3.01 )
[TPCTL:] GetEvents                                       +
	     OpenInstance=1

	Tpctl: Event Queue is empty.	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 3.01 )
[TPCTL:] 
[TPCTL:] # And open and setup the cards.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 3.02 )
[TPCTL:] Open                                            +
	     OpenInstance=1                              +
	     AdapterName=TP_TRUSTED_CARD   MAY_DIFFER

	Tpctl: The Open command has been issued.

	CmdCode = Open
	Return Status = NDIS_STATUS_SUCCESS
	Request Pended = TRUE	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 3.02 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 3.03 )
[TPCTL:] SetPacketFilter                                 +
	     OpenInstance=1                              +
	     PacketFilter=DIRECTED

	Tpctl: The SetPacketFilter command has been issued.

	CmdCode = SetPacketFilter

	    OID = 0x0001010E
            "OID_GEN_CURRENT_PACKET_FILTER"

	Return Status = NDIS_STATUS_SUCCESS
	Request Pended = TRUE		MAY_DIFFER

	**********************************
[TPCTL:] #	-SECTION_END-( 3.03 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Now wait for the server side to start the test
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 3.04 )
[TPCTL:] Pause                                           +
	     OpenInstance=1                              +
	     RemoteAddress=TP_REM_TEST_CARD_ADDRESS   MAY_DIFFER    +
	     TestSignature=211231
[TPCTL:] #	-SECTION_END-( 3.04 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Then start the test,
[TPCTL:] 
[TPCTL:] # Send 40 byte packets.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 3.05 )
[TPCTL:] Send                                            +
	     OpenInstance=1                              +
	     DestinationAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER   +
	     PacketSize=40                               +
	     Number=10

	Tpctl: The Send command has been issued.
[TPCTL:] #	-SECTION_END-( 3.05 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 3.06 )
[TPCTL:] WaitSend                                        +
	     OpenInstance=1

	Packet Sends          =         10
	Packet Pends          =         10	MAY_DIFFER
	Packet Send Completes =         10	EQUAL_LAST
	Packet Send Fails     =          0
[TPCTL:] #	-SECTION_END-( 3.06 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Send 512 byte packets.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 3.07 )
[TPCTL:] Send                                            +
	     OpenInstance=1                              +
	     DestinationAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER   +
	     PacketSize=512                              +
	     Number=10

	Tpctl: The Send command has been issued.
[TPCTL:] #	-SECTION_END-( 3.07 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 3.08 )
[TPCTL:] WaitSend                                        +
	     OpenInstance=1

	Packet Sends          =         10
	Packet Pends          =         10	MAY_DIFFER
	Packet Send Completes =         10	EQUAL_LAST
	Packet Send Fails     =          0
[TPCTL:] #	-SECTION_END-( 3.08 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Send "MAXIMUM FRAME SIZE" byte packets.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 3.09 )
[TPCTL:] Send                                            +
	     OpenInstance=1                              +
	     DestinationAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER   +
	     PacketSize=TP_MAX_FRAME_SIZE   MAY_DIFFER              +
	     Number=10

	Tpctl: The Send command has been issued.
[TPCTL:] #	-SECTION_END-( 3.09 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 3.10 )
[TPCTL:] WaitSend                                        +
	     OpenInstance=1

	Packet Sends          =         10
	Packet Pends          =         10	MAY_DIFFER
	Packet Send Completes =         10	EQUAL_LAST
	Packet Send Fails     =          0
[TPCTL:] #	-SECTION_END-( 3.10 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Now tell the server side to clean up.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 3.11 )
[TPCTL:] Go                                              +
	     OpenInstance=1                              +
	     RemoteAddress=TP_REM_TEST_CARD_ADDRESS   MAY_DIFFER    +
	     TestSignature=211232
[TPCTL:] #	-SECTION_END-( 3.11 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Finally close the adapter, and again dump the Event
[TPCTL:] # Queue for any unexpected events.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 3.12 )
[TPCTL:] Close                                           +
	     OpenInstance=1

	Tpctl: The Close command has been issued.

	CmdCode = Close
	Return Status = NDIS_STATUS_SUCCESS
	Request Pended = TRUE	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 3.12 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 3.13 )
[TPCTL:] GetEvents                                       +
	     OpenInstance=1

	Tpctl: Event Queue is empty.	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 3.13 )
[TPCTL:] 
[TPCTL:] Enable
[TPCTL:] 
[TPCTL:] #	-SECTION_END-( 3.00 )
[TPCTL:] ReadScript \tps\scripts\2\1\1\2\srv\4.tps
[TPCTL:] #	-SECTION_START-( 4.00 ) -SECTION_DESC-( "Send Broadcast, Receive Multicast-server-side" )
[TPCTL:] ##
[TPCTL:] ## TITLE: 2.1.1.2.4 Send Broadcast, Receive Multicast (2M/1C/1O) server-side
[TPCTL:] ##
[TPCTL:] ## 2 Machine - 1 Card - 1 Open Instance on the card.  These tests
[TPCTL:] ## will have the trusted card on one machine send 10 BROADCAST packets
[TPCTL:] ## to the card being tested on another machine.  The test card will
[TPCTL:] ## have its packetfilter set to receive MULTICAST packets.  Packets
[TPCTL:] ## of size 40 bytes, 512 bytes, and MAX_FRAME_SIZE bytes will be
[TPCTL:] ## sent.
[TPCTL:] ##
[TPCTL:] ## The server side of the test is run on the machine with the trusted
[TPCTL:] ## card installed.
[TPCTL:] ##
[TPCTL:] ## No packets should be received by the test card.
[TPCTL:] ##
[TPCTL:] 
[TPCTL:] # First dump any outstanding unexpected events to clear
[TPCTL:] # the event queue.  This "should" be empty here.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 4.01 )
[TPCTL:] GetEvents                                       +
	     OpenInstance=1

	Tpctl: Event Queue is empty.	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 4.01 )
[TPCTL:] 
[TPCTL:] # And open and setup the cards.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 4.02 )
[TPCTL:] Open                                            +
	     OpenInstance=1                              +
	     AdapterName=TP_TRUSTED_CARD   MAY_DIFFER

	Tpctl: The Open command has been issued.

	CmdCode = Open
	Return Status = NDIS_STATUS_SUCCESS
	Request Pended = TRUE	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 4.02 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 4.03 )
[TPCTL:] SetPacketFilter                                 +
	     OpenInstance=1                              +
	     PacketFilter=DIRECTED

	Tpctl: The SetPacketFilter command has been issued.

	CmdCode = SetPacketFilter

	    OID = 0x0001010E
            "OID_GEN_CURRENT_PACKET_FILTER"

	Return Status = NDIS_STATUS_SUCCESS
	Request Pended = TRUE		MAY_DIFFER

	**********************************
[TPCTL:] #	-SECTION_END-( 4.03 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Now wait for the server side to start the test
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 4.04 )
[TPCTL:] Pause                                           +
	     OpenInstance=1                              +
	     RemoteAddress=TP_MULTICAST_ADDRESS   MAY_DIFFER        +
	     TestSignature=211241
[TPCTL:] #	-SECTION_END-( 4.04 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Then start the test,
[TPCTL:] 
[TPCTL:] # Send 40 byte packets.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 4.05 )
[TPCTL:] Send                                            +
	     OpenInstance=1                              +
	     DestinationAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER   +
	     PacketSize=40                               +
	     Number=10

	Tpctl: The Send command has been issued.
[TPCTL:] #	-SECTION_END-( 4.05 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 4.06 )
[TPCTL:] WaitSend                                        +
	     OpenInstance=1

	Packet Sends          =         10
	Packet Pends          =         10	MAY_DIFFER
	Packet Send Completes =         10	EQUAL_LAST
	Packet Send Fails     =          0
[TPCTL:] #	-SECTION_END-( 4.06 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Send 512 byte packets.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 4.07 )
[TPCTL:] Send                                            +
	     OpenInstance=1                              +
	     DestinationAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER   +
	     PacketSize=512                              +
	     Number=10

	Tpctl: The Send command has been issued.
[TPCTL:] #	-SECTION_END-( 4.07 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 4.08 )
[TPCTL:] WaitSend                                        +
	     OpenInstance=1

	Packet Sends          =         10
	Packet Pends          =         10	MAY_DIFFER
	Packet Send Completes =         10	EQUAL_LAST
	Packet Send Fails     =          0
[TPCTL:] #	-SECTION_END-( 4.08 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Send "MAXIMUM FRAME SIZE" byte packets.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 4.09 )
[TPCTL:] Send                                            +
	     OpenInstance=1                              +
	     DestinationAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER   +
	     PacketSize=TP_MAX_FRAME_SIZE   MAY_DIFFER              +
	     Number=10

	Tpctl: The Send command has been issued.
[TPCTL:] #	-SECTION_END-( 4.09 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 4.10 )
[TPCTL:] WaitSend                                        +
	     OpenInstance=1

	Packet Sends          =         10
	Packet Pends          =         10	MAY_DIFFER
	Packet Send Completes =         10	EQUAL_LAST
	Packet Send Fails     =          0
[TPCTL:] #	-SECTION_END-( 4.10 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Now tell the server side to clean up.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 4.11 )
[TPCTL:] Go                                              +
	     OpenInstance=1                              +
	     RemoteAddress=TP_MULTICAST_ADDRESS   MAY_DIFFER        +
	     TestSignature=211242
[TPCTL:] #	-SECTION_END-( 4.11 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Finally close the adapter, and again dump the Event
[TPCTL:] # Queue for any unexpected events.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 4.12 )
[TPCTL:] Close                                           +
	     OpenInstance=1

	Tpctl: The Close command has been issued.

	CmdCode = Close
	Return Status = NDIS_STATUS_SUCCESS
	Request Pended = TRUE	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 4.12 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 4.13 )
[TPCTL:] GetEvents                                       +
	     OpenInstance=1

	Tpctl: Event Queue is empty.	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 4.13 )
[TPCTL:] 
[TPCTL:] #	-SECTION_END-( 4.00 )
[TPCTL:] ReadScript \tps\scripts\2\1\1\2\srv\5.tps
[TPCTL:] #	-SECTION_START-( 5.00 ) -SECTION_DESC-( "Send Broadcast, Receive All Multicast-server-side" ) -OPTIONALS-( ALLMULTICAST )
[TPCTL:] ##
[TPCTL:] ## TITLE: 2.1.1.2.5 Send Broadcast, Receive All Multicast (2M/1C/1O)
[TPCTL:] ## TITLE:           server-side
[TPCTL:] ##
[TPCTL:] ## 2 Machine - 1 Card - 1 Open Instance on the card.  These tests
[TPCTL:] ## will have the trusted card on one machine send 10 BROADCAST packets
[TPCTL:] ## to the card being tested on another machine.  The test card will
[TPCTL:] ## have its packetfilter set to receive ALLMULTICAST packets.  Packets
[TPCTL:] ## of size 40 bytes, 512 bytes, and MAX_FRAME_SIZE bytes will be
[TPCTL:] ## sent.
[TPCTL:] ##
[TPCTL:] ## The server side of the test is run on the machine with the trusted
[TPCTL:] ## card installed.
[TPCTL:] ##
[TPCTL:] ## No packets should be received by the test card.
[TPCTL:] ##
[TPCTL:] 
[TPCTL:] Disable ALLMULTICAST
[TPCTL:] 
[TPCTL:] # First dump any outstanding unexpected events to clear
[TPCTL:] # the event queue.  This "should" be empty here.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 5.01 )
[TPCTL:] GetEvents                                       +
	     OpenInstance=1

	Tpctl: Event Queue is empty.	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 5.01 )
[TPCTL:] 
[TPCTL:] # And open and setup the cards.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 5.02 )
[TPCTL:] Open                                            +
	     OpenInstance=1                              +
	     AdapterName=TP_TRUSTED_CARD   MAY_DIFFER

	Tpctl: The Open command has been issued.

	CmdCode = Open
	Return Status = NDIS_STATUS_SUCCESS
	Request Pended = TRUE	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 5.02 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 5.03 )
[TPCTL:] SetPacketFilter                                 +
	     OpenInstance=1                              +
	     PacketFilter=DIRECTED

	Tpctl: The SetPacketFilter command has been issued.

	CmdCode = SetPacketFilter

	    OID = 0x0001010E
            "OID_GEN_CURRENT_PACKET_FILTER"

	Return Status = NDIS_STATUS_SUCCESS
	Request Pended = TRUE		MAY_DIFFER

	**********************************
[TPCTL:] #	-SECTION_END-( 5.03 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Now wait for the server side to start the test
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 5.04 )
[TPCTL:] Pause                                           +
	     OpenInstance=1                              +
	     RemoteAddress=TP_MULTICAST_ADDRESS   MAY_DIFFER        +
	     TestSignature=211251
[TPCTL:] #	-SECTION_END-( 5.04 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Then start the test,
[TPCTL:] 
[TPCTL:] # Send 40 byte packets.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 5.05 )
[TPCTL:] Send                                            +
	     OpenInstance=1                              +
	     DestinationAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER   +
	     PacketSize=40                               +
	     Number=10

	Tpctl: The Send command has been issued.
[TPCTL:] #	-SECTION_END-( 5.05 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 5.06 )
[TPCTL:] WaitSend                                        +
	     OpenInstance=1

	Packet Sends          =         10
	Packet Pends          =         10	MAY_DIFFER
	Packet Send Completes =         10	EQUAL_LAST
	Packet Send Fails     =          0
[TPCTL:] #	-SECTION_END-( 5.06 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Send 512 byte packets.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 5.07 )
[TPCTL:] Send                                            +
	     OpenInstance=1                              +
	     DestinationAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER   +
	     PacketSize=512                              +
	     Number=10

	Tpctl: The Send command has been issued.
[TPCTL:] #	-SECTION_END-( 5.07 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 5.08 )
[TPCTL:] WaitSend                                        +
	     OpenInstance=1

	Packet Sends          =         10
	Packet Pends          =         10	MAY_DIFFER
	Packet Send Completes =         10	EQUAL_LAST
	Packet Send Fails     =          0
[TPCTL:] #	-SECTION_END-( 5.08 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Send "MAXIMUM FRAME SIZE" byte packets.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 5.09 )
[TPCTL:] Send                                            +
	     OpenInstance=1                              +
	     DestinationAddress=TP_BROADCAST_ADDRESS   MAY_DIFFER   +
	     PacketSize=TP_MAX_FRAME_SIZE   MAY_DIFFER              +
	     Number=10

	Tpctl: The Send command has been issued.
[TPCTL:] #	-SECTION_END-( 5.09 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 5.10 )
[TPCTL:] WaitSend                                        +
	     OpenInstance=1

	Packet Sends          =         10
	Packet Pends          =         10	MAY_DIFFER
	Packet Send Completes =         10	EQUAL_LAST
	Packet Send Fails     =          0
[TPCTL:] #	-SECTION_END-( 5.10 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Now tell the server side to clean up.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 5.11 )
[TPCTL:] Go                                              +
	     OpenInstance=1                              +
	     RemoteAddress=TP_MULTICAST_ADDRESS   MAY_DIFFER        +
	     TestSignature=211252
[TPCTL:] #	-SECTION_END-( 5.11 )
[TPCTL:] 
[TPCTL:] ########################################################
[TPCTL:] 
[TPCTL:] # Finally close the adapter, and again dump the Event
[TPCTL:] # Queue for any unexpected events.
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 5.12 )
[TPCTL:] Close                                           +
	     OpenInstance=1

	Tpctl: The Close command has been issued.

	CmdCode = Close
	Return Status = NDIS_STATUS_SUCCESS
	Request Pended = TRUE	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 5.12 )
[TPCTL:] 
[TPCTL:] #	-SECTION_START-( 5.13 )
[TPCTL:] GetEvents                                       +
	     OpenInstance=1

	Tpctl: Event Queue is empty.	MAY_DIFFER
[TPCTL:] #	-SECTION_END-( 5.13 )
[TPCTL:] 
[TPCTL:] Enable
[TPCTL:] 
[TPCTL:] #	-SECTION_END-( 5.00 )
